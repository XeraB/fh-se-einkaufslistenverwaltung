{
	"info": {
		"_postman_id": "c8904517-3d85-4312-aa3e-67595d94c0b9",
		"name": "SE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17931509"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{route}}/rest/shoppingList/products/all",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"products",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.a('string');\r",
									"    pm.expect(responseJson.name).to.equal('Apfel');\r",
									"    pm.expect(responseJson.id).to.equal(1);\r",
									"    pm.expect(responseJson.bestBeforeTime).to.equal(5);\r",
									"    pm.expect(responseJson.price).to.equal(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{route}}/rest/shoppingList/products/1?Authorization=Bearer {{token}}",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"products",
								"1"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer {{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.a('string');\r",
									"    pm.expect(responseJson.name).to.equal('Ananas');\r",
									"    pm.expect(responseJson.id).to.be.a('number');\r",
									"    pm.expect(responseJson.bestBeforeTime).to.equal(2);\r",
									"    pm.expect(responseJson.price).to.equal(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ananas\",\r\n    \"bestBeforeTime\": \"2\",\r\n    \"price\": \"5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{route}}/rest/shoppingList/products/new?Authorization=Bearer {{token}}",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"products",
								"new"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer {{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{route}}/rest/shoppingList/products/3",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"products",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ShoppingListProducts",
			"item": [
				{
					"name": "Get All Products From Shopping List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{route}}/rest/shoppingList/all",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a product to a shopping list with the userId, the product number and amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is true\", function () {\r",
									"  pm.response.to.have.body('{\"productId\":5,\"shoppingListId\":1,\"amount\":3,\"unit\":\"STUECK\",\"name\":\"Ananas\",\"bestBeforeTime\":2,\"price\":5}' );\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"productId\": 5,\r\n\"amount\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{route}}/rest/shoppingList/",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Amount of Product on Shopping List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The response has all properties\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.productId).to.eql(2);\r",
									"    pm.expect(jsonData.shoppingListId).to.eql(1);\r",
									"    pm.expect(jsonData.amount).to.eql(3);\r",
									"    pm.expect(jsonData.name).to.eql(\"Banane\");\r",
									"    pm.expect(jsonData.bestBeforeTime).to.eql(4);\r",
									"    pm.expect(jsonData.price).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productId\": \"2\",\r\n    \"amount\": \"3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{route}}/rest/shoppingList/",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product from Shopping List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{route}}/rest/shoppingList/entry/1",
							"host": [
								"{{route}}"
							],
							"path": [
								"rest",
								"shoppingList",
								"entry",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Remove user from shopping list and delete the list, when no other user left",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{route}}/rest/shoppingList/",
					"host": [
						"{{route}}"
					],
					"path": [
						"rest",
						"shoppingList",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "route",
			"value": "http://test-sweng-sweng-team02-einkaufslistenverwaltung.wi-k8s.fh-muenster.de"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ0ZXN0MUB0ZXN0LmNvbSIsImF1dGgiOiJBRE1JTiIsImlhdCI6MTY2MjY2ODMxNiwiZXhwIjozNjAwMTY2MjY2ODMxNn0.QyOrFdCMT8UuBJEHaWNZPCwJePaMayt-kZkPy4R72uVJN5SX2YoG05wEP9JiyWA_Cjgd9rAOxHfiFXQXVsBrZ1PIgMjpEjEF9Sbg6GuVxU8PBRTwbWV-u7a5OmBzjRGe1Y_ODc_5UjiAgi1TKaHJYqxeMjr0hm1SkhZQYxPgIwbebfuLcLTHYrGjuW984zuhnaz-rZKt6u1p5Qq6MMh94HNdd1n9NfK3wT9voIQgGEuuT65hZ3y2QchmW6Z8PTwEkaFGpYGJllmJkkMK5aqLVnYXrZlDHbEXIrBUkmWg2RH7zsKBoy-fThfDEruZ6jdbf3KvMxxmbWtwhN4cF7Tl4A",
			"type": "string"
		}
	]
}